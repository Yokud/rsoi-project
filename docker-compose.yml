version: "3"
services:
  postgres:
    image: library/postgres:15
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - db-local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  gateway:
    image: ${DOCKER_REGISTRY-}dsprojectgateway
    container_name: gateway
    build:
      context: ./src/DS_Project.GateWay/
      dockerfile: Dockerfile
    depends_on:
      - rentals
      - cars
      - payments
      - auth
    networks:
      - cars-local
      - rentals-local
      - payments-local
      - auth-local
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/manage/health"]
      interval: 5s
      timeout: 10s

  cars:
    image: ${DOCKER_REGISTRY-}dsprojectcars
    container_name: cars
    build:
      context: ./src/DS_Project.Cars/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cars-local
      - db-local
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8070/manage/health"]
      interval: 5s
      timeout: 10s

  rentals:
    image: ${DOCKER_REGISTRY-}dsprojectrentals
    container_name: rentals
    build:
      context: ./src/DS_Project.Rental/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rentals-local
      - db-local
    ports:
      - "8060:8060"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8060/manage/health"]
      interval: 5s
      timeout: 10s

  payments:
    image: ${DOCKER_REGISTRY-}dsprojectpayments
    container_name: payments
    build:
      context: ./src/DS_Project.Payment/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - payments-local
      - db-local
    ports:
      - "8050:8050"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8050/manage/health"]
      interval: 5s
      timeout: 10s

  auth:
    image: ${DOCKER_REGISTRY-}dsprojectauth
    container_name: auth
    build:
      context: ./src/DS_Project.Auth/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - auth-local
      - db-local
    ports:
      - "8040:8040"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8040/manage/health"]
      interval: 5s
      timeout: 10s

volumes:
  db-data:
  
networks:
  cars-local:
  rentals-local:
  payments-local:
  auth-local:
  db-local:
    driver: bridge