version: "3"
services:
  postgres:
    image: library/postgres:15
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - db-local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  gateway:
    image: ${DOCKER_REGISTRY-}dsprojectgateway
    container_name: gateway
    build:
      context: ./src/DS_Project.GateWay/
      dockerfile: Dockerfile
    depends_on:
      - rentals
      - cars
      - payments
    networks:
      - cars-local
      - rentals-local
      - payments-local
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/manage/health"]
      interval: 5s
      timeout: 10s

  cars:
    image: ${DOCKER_REGISTRY-}dsprojectcars
    container_name: cars
    build:
      context: ./src/DS_Project.Cars/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cars-local
      - db-local
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8070/manage/health"]
      interval: 5s
      timeout: 10s

  rentals:
    image: ${DOCKER_REGISTRY-}dsprojectrentals
    container_name: rentals
    build:
      context: ./src/DS_Project.Rental/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rentals-local
      - db-local
    ports:
      - "8060:8060"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8060/manage/health"]
      interval: 5s
      timeout: 10s

  payments:
    image: ${DOCKER_REGISTRY-}dsprojectpayments
    container_name: payments
    build:
      context: ./src/DS_Project.Payment/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - payments-local
      - db-local
    ports:
      - "8050:8050"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8050/manage/health"]
      interval: 5s
      timeout: 10s

volumes:
  db-data:
  
networks:
  cars-local:
  rentals-local:
  payments-local:
  db-local:
    driver: bridge